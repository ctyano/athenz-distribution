name: Test Open Policy Agent Rego for Identity Provider

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  # If any commit message in your push or the HEAD commit of your PR contains the strings
  # [skip ci], [ci skip], [no ci], [skip actions], or [actions skip]
  # workflows triggered on the push or pull_request events will be skipped.
  # https://github.blog/changelog/2021-02-08-github-actions-skip-pull-request-and-push-workflows-with-skip-ci/
  workflow_call:
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/test-identityprovider.yaml
      - kubernetes/athenz-identityprovider/kustomize/athenz-identityprovider-policy/**

env:
  # Use docker.io for Docker Hub if empty
  DOCKER_REGISTRY_URL: ghcr.io
  # DOCKER_REGISTRY_OWNER: ${{ env.CI_REPOSITORY_OWNER }}
  # DOCKER_REGISTRY_IMAGE: ${{ env.CI_REPOSITORY_NAME }}
  # DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
  # DOCKER_TAEGET_PLATFORMS: linux/amd64,linux/arm64
  # DOCKER_BUILD_ARGS: |
  GITHUB_REPOSITORY: AthenZ/athenz
  EXPECTED_OPA_TEST_COVERAGE: 90

jobs:
  build:

    runs-on: ubuntu-latest
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
    permissions:
      actions: none
      checks: none
      contents: read
      deployments: none
      issues: none
      discussions: none
      packages: read
      pull-requests: none
      repository-projects: none
      security-events: none
      statuses: none

    steps:
      # A GitHub Action to expose useful environment variables.
      # https://github.com/FranzDiebold/github-env-vars-action
      -
        name: GitHub Environment Variables Action
        id: env
        # uses: https://github.com/FranzDiebold/github-env-vars-action/tags
        uses: FranzDiebold/github-env-vars-action@v2

      # A GitHub Action to prepare default environment variables.
      -
        name: Set Default Environment Variables
        id: default_env
        run: |
          # Use docker.io for Docker Hub if empty
          [[ "${{ env.DOCKER_REGISTRY_URL}}" = "" ]] && echo "DOCKER_REGISTRY_URL=docker.io" >> $GITHUB_ENV
          [[ "${{ env.DOCKER_REGISTRY_OWNER }}" = "" ]] && echo "DOCKER_REGISTRY_OWNER=${{ env.CI_REPOSITORY_OWNER }}" >> $GITHUB_ENV
          [[ "${{ env.DOCKER_REGISTRY_IMAGE }}" = "" ]] && echo "DOCKER_REGISTRY_IMAGE=${{ env.CI_REPOSITORY_NAME }}" >> $GITHUB_ENV
          [[ "${{ secrets.DOCKER_REGISTRY_TOKEN }}" = "" ]] && echo "DOCKER_REGISTRY_URL=ghcr.io" >> $GITHUB_ENV
          [[ "${{ secrets.DOCKER_REGISTRY_TOKEN }}" = "" ]] && echo "DOCKER_REGISTRY_OWNER=${{ env.CI_REPOSITORY_OWNER }}" >> $GITHUB_ENV
          [[ "${{ secrets.DOCKER_REGISTRY_TOKEN }}" = "" ]] && echo "DOCKER_REGISTRY_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV || echo "DOCKER_REGISTRY_TOKEN=${{ secrets.DOCKER_REGISTRY_TOKEN }}" >> $GITHUB_ENV

      # This action checks-out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
      # https://github.com/actions/checkout
      -
        name: Checkout repository
        id: checkout
        # You may pin to the exact commit or the version.
        # uses: https://github.com/actions/checkout/tags
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # GitHub action to configure the Open Policy Agent CLI in your GitHub Actions workflow.
      # Open Policy Agent (OPA) is an open source, general-purpose policy engine.
      # https://github.com/open-policy-agent/setup-opa
      -
        name: Setup OPA
        id: opa
        # uses: https://github.com/open-policy-agent/setup-opa/tags
        uses: open-policy-agent/setup-opa@v2
        with:
          version: latest

      # A GitHub Action to check and test application
      -
        name: Run Tests
        run: |
          # Run tests for Open Policy Agent Rego files
          # Replace this with your test command
          opa test -v \
            kubernetes/athenz-identityprovider/kustomize/athenz-identityprovider-policy/{policy,test}/*.rego \
            kubernetes/athenz-identityprovider/kustomize/athenz-identityprovider-policy/{policy,test}/*.yaml

      # A GitHub Action to attest the test coverage of the application
      -
        name: Run Tests
        run: |
          # Run tests for Open Policy Agent Rego files and attest the test coverage
          # Replace this with your test command
          OPA_TEST_COVERAGE=$(opa test -cv \
              kubernetes/athenz-identityprovider/kustomize/athenz-identityprovider-policy/{policy,test}/*.rego \
              kubernetes/athenz-identityprovider/kustomize/athenz-identityprovider-policy/{policy,test}/*.yaml \
            | jq -r .coverage)
          echo "${EXPECTED_OPA_TEST_COVERAGE} < ${OPA_TEST_COVERAGE}" \
            | bc -l \
            | xargs -I% test % = 1 \
            && echo "EXPECTED_OPA_TEST_COVERAGE: ${EXPECTED_OPA_TEST_COVERAGE} < OPA_TEST_COVERAGE: ${OPA_TEST_COVERAGE}"

