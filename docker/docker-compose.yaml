services:

  athenz-cli:
    container_name: athenz-cli
    image: ghcr.io/ctyano/athenz-cli:v${VERSION}
    depends_on:
      - athenz-zms-server
      - athenz-zts-server
    networks:
      - athenz
    volumes:
      - ./admin:/var/run/athenz:rw
      - ./zms/var:/var/zms:rw
      - ./zms/conf:/conf/zms:rw
      - ./zts/var:/var/zts:rw
      - ./zts/conf:/conf/zts:rw
    environment:
      ZMS: https://athenz-zms-server:4443/zms/v1
      ZTS: https://athenz-zts-server:8443/zts/v1
    restart: unless-stopped

  # https://github.com/ghostunnel/ghostunnel
  ghostunnel:
    container_name: ghostunnel
    image: docker.io/ghostunnel/ghostunnel:latest
    depends_on:
      - athenz-ui
    command:
      - client
      - --listen
      - 0.0.0.0:3000
      - --target
      - athenz-ui:443
      - --override-server-name
      - athenz-ui
      - --cacert
      - /home/athenz/tls/ca.cert.pem
      - --disable-authentication
      - --unsafe-listen
    hostname: localhost
    expose:
      - 3000
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: host
    networks:
      - athenz
    volumes:
      - ./ui/tls:/home/athenz/tls:ro
    restart: unless-stopped

  athenz-ui:
    container_name: athenz-ui
    depends_on:
      - athenz-zms-server
    image: ghcr.io/ctyano/athenz-ui:v${VERSION}
    hostname: localhost
    expose:
      - 443
    ports:
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    networks:
      - athenz
    volumes:
      - ./ui/tls:/home/athenz/tls:ro
      - type: bind
        source: ./ui/src/config/extended-config.js
        target: /home/athenz/src/config/extended-config.js
    environment:
      TZ: Asia/Tokyo
      NODE_ENV: production
      DEBUG: AthenzUI:*
      STATIC_USER_NAME: athenz_admin
      PORT: 443
      ZMS_SERVER_URL: https://athenz-zms-server:4443/zms/v1/
      UI_CERT_KEY_PATH: /home/athenz/tls/ui.private.pem
      UI_CERT_PATH: /home/athenz/tls/ui.cert.pem
      ATHENZ_PUBLIC_CERT: /home/athenz/tls/ui.cert.pem
      ATHENZ_PRIVATE_KEY: /home/athenz/tls/ui.private.pem
      NODE_EXTRA_CA_CERTS: /home/athenz/tls/ca.cert.pem
    restart: unless-stopped

  athenz-zms-server:
    container_name: athenz-zms-server
    image: ghcr.io/ctyano/athenz-zms-server:v${VERSION}
    depends_on:
      - athenz-db
    hostname: localhost
    expose:
      - 4443
    ports:
      - target: 4443
        published: 4443
        protocol: tcp
        mode: host
    networks:
      - athenz
      - athenz-db
    volumes:
      - ./zms/var:/opt/athenz/zms/var:rw
      - ./zms/conf:/opt/athenz/zms/conf/zms_server:rw
      - ./zms/truststore:/var/run/athenz/truststore:rw
      - ./zms/keystore:/var/run/athenz/keystore:rw
      - athenz-plugins:/athenz/plugins
    environment:
      DEBUG: "true"
      TZ: Asia/Tokyo
      ROOT: /opt/athenz/zms
      CLASSPATH: /opt/athenz/zms/lib/jars/*
      CONF_PATH: /opt/athenz/zms/conf/zms_server
      JAVA_OPTS: "-Dathenz.root_dir=/opt/athenz/zms -Dathenz.jetty_home=/opt/athenz/zms -Dathenz.access_log_dir=/opt/athenz/zms/logs"
      USER_CLASSPATH: /usr/lib/jars/*:/athenz/plugins/*
      ZMS_STOP_TIMEOUT: "30"
      ZMS_PRIVATE_KEY: /opt/athenz/zms/var/keys/zms.private.pem
      ZMS_RSA_PRIVATE_KEY: /opt/athenz/zms/var/keys/zms.private.pem
      ZMS_EC_PRIVATE_KEY: /opt/athenz/zms/var/keys/zms.private.pem
      ZMS_PRIVATE_KEY_ID: "0"
      ZMS_RSA_PRIVATE_KEY_ID: "0"
      ZMS_EC_PRIVATE_KEY_ID: "0"
      ZMS_TRUSTSTORE_PEM_PATH: /opt/athenz/zms/var/certs/ca.cert.pem
      ZMS_KEYSTORE_CERT_PEM_PATH: /opt/athenz/zms/var/certs/zms.cert.pem
      ZMS_KEYSTORE_KEY_PEM_PATH: /opt/athenz/zms/var/keys/zms.private.pem
    restart: unless-stopped

  athenz-zts-server:
    container_name: athenz-zts-server
    image: ghcr.io/ctyano/athenz-zts-server:v${VERSION}
    depends_on:
      - athenz-db
    hostname: localhost
    expose:
      - 8443
    ports:
      - target: 8443
        published: 8443
        protocol: tcp
        mode: host
    networks:
      - athenz
      - athenz-db
    volumes:
      - ./zts/var:/opt/athenz/zts/var:rw
      - ./zts/conf:/opt/athenz/zts/conf/zts_server:rw
      - ./zts/conf:/opt/athenz/zts/conf/athenz:rw
      - ./zts/truststore:/var/run/athenz/truststore:rw
      - ./zts/keystore:/var/run/athenz/keystore:rw
      - athenz-plugins:/athenz/plugins
    environment:
      DEBUG: "true"
      TZ: Asia/Tokyo
      ROOT: /opt/athenz/zts
      CLASSPATH: /opt/athenz/zts/lib/jars/*
      CONF_PATH: /opt/athenz/zts/conf/zts_server
      JAVA_OPTS: "-Dathenz.root_dir=/opt/athenz/zts -Dathenz.jetty_home=/opt/athenz/zts -Dathenz.access_log_dir=/opt/athenz/zts/logs"
      USER_CLASSPATH: /usr/lib/jars/*:/athenz/plugins/*
      ZTS_STOP_TIMEOUT: "30"
      ZTS_PRIVATE_KEY: /opt/athenz/zts/var/keys/zts.private.pem
      ZTS_PRIVATE_KEY_ID: "0"
      ZTS_SELF_SIGNER_PRIVATE_KEY: /opt/athenz/zts/var/keys/zts.private.pem
      ZTS_TRUSTSTORE_PEM_PATH: /opt/athenz/zts/var/certs/ca.cert.pem
      ZTS_SIGNER_TRUSTSTORE_PEM_PATH: /opt/athenz/zts/var/certs/ca.cert.pem
      ZMS_CLIENT_TRUSTSTORE_PEM_PATH: /opt/athenz/zts/var/certs/ca.cert.pem
      ZTS_KEYSTORE_CERT_PEM_PATH: /opt/athenz/zts/var/certs/zts.cert.pem
      ZTS_KEYSTORE_KEY_PEM_PATH: /opt/athenz/zts/var/keys/zts.private.pem
      ZMS_CLIENT_KEYSTORE_CERT_PEM_PATH: /opt/athenz/zts/var/certs/zts.cert.pem
      ZMS_CLIENT_KEYSTORE_KEY_PEM_PATH: /opt/athenz/zts/var/keys/zts.private.pem
      ZTS_SIGNER_KEYSTORE_CERT_PEM_PATH: /opt/athenz/zts/var/certs/ca.cert.pem
      ZTS_SIGNER_KEYSTORE_KEY_PEM_PATH: /opt/athenz/zts/var/keys/ca.private.pem
    restart: unless-stopped

  athenz-db:
    container_name: athenz-db
    image: ghcr.io/ctyano/athenz-db:v${VERSION}
    ports:
      - target: 3306
        published: 3306
        protocol: tcp
        mode: host
    networks:
      - athenz-db
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Asia/Tokyo
      MYSQL_ROOT_PASSWORD: ""
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: true
    restart: unless-stopped

  athenz-plugins:
    container_name: athenz-plugins
    image: ghcr.io/ctyano/athenz-plugins:v${VERSION}
    environment:
      JAR_DESTINATION: /athenz/plugins/
    volumes:
      - athenz-plugins:/athenz/plugins

networks:
  athenz:
    driver: bridge
    driver_opts:
      encrypted: "true"
    attachable: true
  athenz-db:
    driver: bridge
    driver_opts:
      encrypted: "true"
    attachable: true
    internal: true

volumes:
  athenz-plugins: {}
